# Generated by Django 5.2 on 2025-05-11 15:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture_url', models.CharField(blank=True, max_length=250, null=True)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'authors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReactionTypes',
            fields=[
                ('reaction_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('emoji', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'reaction_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('article_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250, unique=True)),
                ('content', models.TextField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'articles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.articles')),
                ('parent_comment', models.ForeignKey(blank=True, help_text='comment response. Empty if no parent comment (article level).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_replies', to='nextera_blog.comments')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ArticleTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.articles')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.tags')),
            ],
            options={
                'db_table': 'article_tags',
                'managed': True,
                'unique_together': {('article', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='articles',
            name='tags',
            field=models.ManyToManyField(related_name='articles', through='nextera_blog.ArticleTags', to='nextera_blog.tags'),
        ),
        migrations.CreateModel(
            name='CommentReactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.comments')),
                ('reaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.reactiontypes')),
            ],
            options={
                'db_table': 'comment_reactions',
                'managed': True,
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='ArticleReactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.articles')),
                ('reaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.reactiontypes')),
            ],
            options={
                'db_table': 'article_reactions',
                'managed': True,
                'unique_together': {('user', 'article')},
            },
        ),
        migrations.CreateModel(
            name='UsersRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nextera_blog.roles')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_roles',
                'managed': True,
                'unique_together': {('user', 'role')},
            },
        ),
    ]
